
$secret = Get-AzKeyVaultSecret -VaultName static -Name intha
$secretValue = $secret.SecretValue | ConvertFrom-SecureString -AsPlainText
$pfxCertObject= New-Object System.Security.Cryptography.X509Certificates.X509Certificate2 -ArgumentList @([Convert]::FromBase64String($secretValue),"",[System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)
$pfxPassword = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 50 | % {[char]$_})
$currentDirectory = (Get-Location -PSProvider FileSystem).ProviderPath
[Environment]::CurrentDirectory = (Get-Location -PSProvider FileSystem).ProviderPath
[io.file]::WriteAllBytes(".\appservicecertificate.pfx",$pfxCertObject.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12,$pfxPassword))


Write-Host “Created an App Service Certificate copy at: $currentDirectory\appservicecertificate.pfx” Write-Warning “For security reasons, do not store the PFX password. Use it directly from the console as required.” Write-Host “PFX password: $pfxPassword”

#Server=localhost;Database=master;Trusted_Connection=True;



<style>

    @media only screen and (max-width: 600px){
      .navbar-overlay {
      background: #333333;
      }
  }
  .navbar-overlay {
      margin-bottom: -104px; 
      z-index: 1; 
  }
  #menuBar {
  color: darkgrey !important;
  }

body{z-index:-1

}
   </style>







   





